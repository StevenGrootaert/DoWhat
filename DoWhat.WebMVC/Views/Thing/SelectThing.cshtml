@model DoWhat.Models.ThingModels.ThingSelection

@{
    ViewBag.Title = "SelectThing";
}

<h2>Find a Thing to do</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>ThingSelection</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TimeAllotted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TimeAllotted", new List<SelectListItem>
                //"TimeAlloted" has to be one word just like the model
                {
                    new SelectListItem{ Text="5 min", Value = "5"},
                    new SelectListItem{ Text="15 min", Value = "15"},
                    new SelectListItem{ Text="30 min", Value = "30"},
                    new SelectListItem{ Text="45 min", Value = "45"},
                    new SelectListItem{ Text="1 hour", Value = "60"},
                    new SelectListItem{ Text="1 and a 1/2 hours", Value = "90"},
                    new SelectListItem{ Text="2 hours", Value = "120"},
                    new SelectListItem{ Text="3 hours", Value = "180"},
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CatagoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CatagoryId, new SelectList(ViewBag.Catagories, "CatagoryId", "Name"), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CatagoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Find" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            Catagory Name
        </th>
        <th>
            Heading
        </th>
        <th>
            Time (in Min)
        </th>
        <th>
            Date Added
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.ThingsSelected)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Catagory.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Heading)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeAlloted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedUtc)
            </td>
            <td>
                @Html.ActionLink("Did you do it?", "Edit", new { id = item.ThingId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ThingId }) |
                @Html.ActionLink("Resources", "IndexByThing", "Resource", new { id = item.ThingId }, null)
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("< I don't want to do a Thing", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
