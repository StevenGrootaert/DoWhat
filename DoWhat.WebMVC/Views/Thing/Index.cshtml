@model IEnumerable<DoWhat.Models.ThingModels.ThingListItem>

@{
    ViewBag.Title = "Index";
}

<h2>List of Things</h2>
<p>(sorted by Time Allotted)</p>

<p>
    @Html.ActionLink("Make a Thing", "Create", "Thing", null, new { @class = "btn btn-primary btn-large" })
</p>

@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success fade in" role="alert">
        <span class="glyphicon glyphicon-thumbs-up" aria-hidden="true"></span>
        @TempData["SaveResult"]
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Catagory.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Heading)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TimeAlloted)
        </th>
        <th>
            @* The index view should only show !completed things make another view with ALL things completed +!completed *@
            @Html.DisplayNameFor(model => model.IsCompleted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedUtc)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Catagory.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Heading)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeAlloted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCompleted) @* item.IsCompleted.Equals(false) doesn't work??  *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedUtc)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ThingId }) |
                @Html.ActionLink("Details", "Details", new { id=item.ThingId }) |
                @Html.ActionLink("Resources", "IndexByThing", "Resource", new { id = item.ThingId }, null)
                @*@Html.ActionLink("Resources", "IndexByThing", "Resource",null,  new { id=item.ThingId}) @*I think I can just make a new view that gets resources by ThingId*@
                @*@Html.ActionLink("Resources", "IndexByThing", "Resourese" new { id=item.ThingId}) *@
            </td>
        </tr>
    }

</table>

<div>
    @Html.ActionLink("< Back to Main Page", "Index", "Home") |
    @Html.ActionLink("Show Completed Things", "IndexCompleted")
</div>

